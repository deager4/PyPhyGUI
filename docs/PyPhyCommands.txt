Commands sent from PyPhyGUI to PyPhy:

General Program Commands:
shutdown
>>> shutdown the python section of the program.  Don't worry about saving or anything like that- a separate command will be sent if that is needed

save filename
>>> save the current state of the engine to the file with the designated name, overwriting it if necessary

* id is a positive integer unique to each object that is used as an identifier for objects when communicating between programs

Creating a new Object:
new object id x y z width height depth r1 r2 r3
>>> construct an object with the given id at the given position and with the given dimensions and rotation
ex. new object 1 0 5 0 10 10 10 0 90 45

Moving an object:
move id xmodifier ymodifier zmodifier
>>> move the object with the given id as specified by the modifiers; this command modifies the object's existing location instead of setting the location
ex. move 1 0 -2 5 means add 0 to x, -2 to y, and 5 to z

Setting an object's location:
moveto id [options]
optional params:
-x - new x-coordinate
-y - new y-coordinate
-z - new z-coordinate
>>> move the object with the given id to the newly given coordinates
ex. move 1 -y 5 -x 24 -z 0
ex. move 2 -x 6
ex. move 3 

Resizing an Object:
resize id widthmodifier heightmodifier depthmodifier
>>> resize the object with the given id by the specified modifiers; this command modifies the object's existing size instead of setting its size
ex. resize 1 0 5 -10 means add 0 to width, 5 to height, and -10 to depth

Setting an Object's size:
setsize id [options]
optional params:
-w - new width
-h - new height
-d - new depth
>>> resize the object with the given id such that is has the given dimensions
ex. setsize 3 -w 25 -h 1
ex. setsize 1 -d 2 -w 1 -h 1
ex. setsize 5

Rotating an Object:
rotate id r1modifier r2modifier r3modifier
>>> rotate the object with the given id as specified by the modifiers; this command modifies the object's existing rotation instead of setting the rotation
ex. rotate 14 36 0 -792 means add 36 to r1, 0 to r2, and -45 to r3

Setting an Object's Rotation:
setrotation id [options]
optional params:
-r1 - new r1
-r2 - new r2
-r3 - new r3
>>> Set the object with the given id's rotation to the newly specified rotation
ex. setrotation 2 -r2 50
ex. setrotation 1 -r1 75 -r2 -72 -r3 1020

Information sent from PyPhy to PyPhyGUI:

start update
>>> Indicate to the java program that a series of updated objects are about to be sent.  This command has the effect of creating a buffer in which to store any sent updates until the end update command is sent (although the actual implementation of this feature may differ).

update id x y z width height depth r1 r2 r3
>>> Indicate to the java section of the program that the object with the given id needs to be updated.  If the start update command has been previously sent, the java program will wait to update its GUI until the end update command is sent.  This has the effect of creating a sort of buffer for updates, thus reducing the number of times the GUI needs to be redrawn.  IF the start update command hasn't been sent, then this update will take effect as soon as possible.
ex. update 1 0 5 0 10 10 10 0 90 45

end update
>>> Indicate to the java program that the series of sent, updated objects is over and the program should now update its GUI to reflect the changes.  This command has the effect of flushing the buffer previously created by start update (although the actual implementation may vary).  If start update hasn't been previously called, this command has no effect.

print message
>>> Prints this message to the shell
ex. print Failed to initialize object with id: 5

println message
>>> Equivalent to sending the command: print message\n (prints message followed by a newline)
ex. println Failed to initialize object with name: "testobject"